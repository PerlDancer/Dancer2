name    = Dancer2
author  = Dancer Core Developers
license = Perl_5
copyright_holder = Alexis Sukrieh
copyright_year   = 2015
main_module = lib/Dancer2.pm

version = 0.165000

[NextRelease]
filename = Changes

[TestRelease]
[ConfirmRelease]

[@Git]
allow_dirty = Changes
allow_dirty = dist.ini
allow_dirty = README.mkdn
add_files_in = Changes
add_files_in = dist.ini
add_files_in = README.mkdn

[@Filter]
-bundle = @Dancer
-remove = AutoPrereqs
-remove = GithubMeta
-remove = ModuleBuild
; Required version of the bundle
:version = 0.0007

; -- static meta-information
[MetaResources]
homepage        = http://perldancer.org/
bugtracker.web  = https://github.com/PerlDancer/Dancer2/issues
repository.url  = git://github.com/PerlDancer/Dancer2.git
repository.web  = https://github.com/PerlDancer/Dancer2
repository.type = git
x_IRC           = irc://irc.perl.org/#dancer
x_WebIRC        = https://chat.mibbit.com/#dancer@irc.perl.org

[PruneFiles]
match = ~$ ; emacs backup files
match = tools/
match = dist.ini


;[PodCoverageTests]
;[Test::EOL]


[Prereqs]
Moo = 2.000000
Moo::Role = 0
Role::Tiny = 2.000000
MooX::Types::MooseLike = 0
Carp = 0
Digest::SHA = 0
Exporter = 5.57
Encode = 0
File::Basename = 0
File::Copy = 0
File::Spec = 0
POSIX = 0
Config::Any = 0
HTTP::Date = 0
HTTP::Body = 0
HTTP::Headers::Fast = 0
HTTP::Tiny = 0
; 3.13 has the URL safe variants
MIME::Base64 = 3.13
; added the "wrap" method in Plack::Builder in 1.0016
; added the "create" method in Plack::Test in 1.0029
Plack = 1.0035
Plack::Middleware::FixMissingBodyInRedirect = 0
Plack::Middleware::RemoveRedundantBody = 0
; JSON is just a serialiser, so in theory should be optional.
; But it is used in the DSL (send_error) and in tests.
; And also so much used in apps...
JSON = 0
; Used in DSL (send_error)
URI::Escape = 0
parent = 0
Template::Tiny = 0
Class::Load = 0
Return::MultiLevel = 0
Import::Into = 0
Safe::Isa = 0
Hash::Merge::Simple = 0
App::Cmd::Setup = 0

[Prereqs / Recommends]
; Serializers
JSON::XS = 0
; Developers are expected to write tests and so use Dancer2::Test
; that depends on Test::More. So Test::More is needed for more than
; just tests of the Dancer distribution
Test::More = 0
Test::Builder = 0
; Extra speed with Request
URL::Encode::XS = 0
CGI::Deurl::XS = 0
; Strong session tokens
Math::Random::ISAAC::XS = 0
Crypt::URandom = 0
; extract pod data from apps
Pod::Simple::Search = 0
Pod::Simple::SimpleTree = 0
Scope::Upper = 0

[Prereqs / Suggests]
; Used by Dancer2::Session::YAML
YAML = 0.86
Fcntl = 0
Class::Load::XS = 0
MIME::Types = 0

; -- test requirements
[Prereqs / TestRequires]
Template = 0
Test::More = 0.92
Capture::Tiny = 0.12
; This version of YAML is needed due to:
; - https://github.com/PerlDancer/Dancer2/issues/899
YAML = 0.86
Test::Fatal = 0
HTTP::Body = 0
HTTP::Cookies = 0
HTTP::Headers = 0

; for maintainers, see with mst how to avoid these
; strictures = 0
; bareword::filehandles = 0
; indirect = 0
; ExtUtils::Depends = 0
; multidimensional = 0
; B::Hooks::OP::Check: = 0
; Test::MockTime = 0
; Test::Memory::Cycle = 1.04
; Devel::Cycle = 1.12

[ExecDir]
dir = script

[ShareDir]
dir = share

; PerlTidy interferes with share/skel
;[PerlTidy]
;perltidyrc = xt/perltidy.rc

; maybe too late for perlcritic ;)
;[Test::Perl::Critic]
;critic_config = xt/perlcritic.rc

; also needs a PR for this one to be possible
; [Test::UnusedVars]

[Encoding]
encoding = bytes
match    = \.(png|ico|jpg)$ ; these are all binary files

[ ReadmeAnyFromPod / MarkdownInRoot ]
filename = README.mkdn
